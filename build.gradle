plugins {
    id 'java'
}

group = 'TablichkaLocal'
version = '0.1'

def tabSubprojects = ["entity-ai"]

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
}

tabSubprojects.forEach( pr ->
    project(":${pr}") {

        sourceSets {
            main {
                java.srcDirs = ["$rootDir/${pr}/main/java"]
                resources.srcDirs = ["$rootDir/${pr}/main/resources"]
            }

            test {
                java.srcDirs = ["$rootDir/${pr}/test/java"]
                resources.srcDirs = ["$rootDir/${pr}/test/resources"]
            }
        }

        def targetJavaVersion = 16
        java {
            def javaVersion = JavaVersion.toVersion(targetJavaVersion)
            sourceCompatibility = javaVersion
            targetCompatibility = javaVersion
            if (JavaVersion.current() < javaVersion) {
                toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
            }
        }

        tasks.withType(JavaCompile).configureEach {
            if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
                options.release = targetJavaVersion
            }
        }

        processResources {
            def props = [version: version]
            inputs.properties props
            filteringCharset 'UTF-8'
            filesMatching('plugin.yml') {
                expand props
            }
        }
    }
)